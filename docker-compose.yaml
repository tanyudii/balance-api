services:
  app:
    build:
        context: .
        dockerfile: Dockerfile
    image: 'app:latest'
    ports:
      - '${FORWARD_APP_PORT:-8080}:80'
    environment:
      APP_PORT: '${APP_PORT:-80}'
      APP_LOG_LEVEL: '${APP_LOG_LEVEL:-debug}'
      DB_HOST: '${DB_HOST:-pgsql}'
      DB_PORT: '${DB_PORT:-5432}'
      DB_DATABASE: '${DB_DATABASE:-app}'
      DB_USERNAME: '${DB_USERNAME:-app}'
      DB_PASSWORD: '${DB_PASSWORD:-secret}'
      DB_LOG_LEVEL: '${DB_LOG_LEVEL:-debug}'
    depends_on:
        - pgsql
    networks:
      - app
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/_health" ]
      retries: 3
      timeout: 5s
  pgsql:
    image: 'postgres:17'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'app-pgsql:/var/lib/postgresql/data'
      - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - app
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
      retries: 3
      timeout: 5s
networks:
  app:
    driver: bridge
volumes:
  app-pgsql:
    driver: local